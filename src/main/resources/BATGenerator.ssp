//XXX: ivm.expressiontree is very much not the right place! Not clear which is the right one
// (something like de.tud.cs.st.bat.resolved.lifted? Something configured?) PG
package ivm
package expressiontree

import annotation.switch

import de.tud.cs.st.bat.resolved
import resolved._
import analyses.ClassHierarchy
import ivm._
import expressiontree._
import Lifting._
import OverloadHack._
<%--


--%>
#import(ivm.generation.ScalaSigHelpers._)<%--

--%>
object BATLifting {<%
  for (c <- List("ClassFile", "ObjectType", "Field", "Method",
		  "ClassMember", "MethodDescriptor", "Code", "ExceptionHandler", "analyses.ClassHierarchy")) {
  //render("WrappedClass.ssp", Map("classFile" -> ("de.tud.cs.st.bat.resolved." + c)))}
  render("WrappedClassInlined.ssp", Map("classFile" -> ("de.tud.cs.st.bat.resolved." + c)))
} %>
<%--
<%
  val classLoader = Thread.currentThread().getContextClassLoader()
  val path = "de.tud.cs.st.bat.resolved".replace('.', '/')
  val resources = classLoader.getResources(path)
  //val classes = getClassesInPackage("de.tud.cs.st.bat.resolved")
  //for (c <- classes) {
  //  render("WrappedClass.ssp", Map("classFile" -> c))
  %>
  //${resources.length}
--%>
}
